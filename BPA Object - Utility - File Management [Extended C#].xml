<process name="Utility - File Management [Extended C#]" version="1.0" bpversion="6.5.1.14401" narrative="Common utility for file IO...extending the Blue Prism Utility - File Management object" byrefcollection="true" type="object" runmode="Background" preferredid="7fef2eac-105b-4fba-8764-00a74c21733f">
  <appdef>
    <element name="Application Root">
      <id>82c11407-43d1-4639-bb1a-7daf951945d4</id>
      <type>Application</type>
      <basetype>Application</basetype>
      <datatype>unknown</datatype>
      <diagnose>False</diagnose>
    </element>
  </appdef>
  <view>
    <camerax>0</camerax>
    <cameray>21</cameray>
    <zoom version="2">1.25</zoom>
  </view>
  <preconditions />
  <endpoint narrative="" />
  <subsheet subsheetid="332fe361-2dce-4907-8aea-27a336807b25" type="CleanUp" published="True">
    <name>Clean Up</name>
    <view>
      <camerax>0</camerax>
      <cameray>0</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="bdfff7c5-0f75-410d-bc08-773a9a069e42" type="Normal" published="True">
    <name>Delete Files</name>
    <view>
      <camerax>-131</camerax>
      <cameray>50</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <subsheet subsheetid="48d3a4f8-7bfe-4634-b7c5-ab28c5860fbb" type="Normal" published="True">
    <name>Parse Fixed Width File To Collection</name>
    <view>
      <camerax>-133</camerax>
      <cameray>-160</cameray>
      <zoom version="2">1.25</zoom>
    </view>
  </subsheet>
  <stage stageid="c0469860-e031-4bf3-89be-88cfa087b4b2" name="Start" type="Start">
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-60</displayx>
    <displayy>-45</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <onsuccess>ff2959d1-effe-4057-83f7-ce9f48600e98</onsuccess>
  </stage>
  <stage stageid="ff2959d1-effe-4057-83f7-ce9f48600e98" name="End" type="End">
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-60</displayx>
    <displayy>45</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
  </stage>
  <stage stageid="44c107de-1a51-499a-bf09-70ad27bb7ef9" name="Stage1" type="ProcessInfo">
    <narrative>
    </narrative>
    <displayx>-240</displayx>
    <displayy>-15</displayy>
    <displaywidth>210</displaywidth>
    <displayheight>90</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <references>
      <reference>System.Data.dll</reference>
      <reference>System.Xml.dll</reference>
      <reference>System.Drawing.dll</reference>
      <reference>System.Xml.Linq.dll</reference>
      <reference>System.Data.DataSetExtensions.dll</reference>
      <reference>System.dll</reference>
      <reference>System.Core.dll</reference>
      <reference>Microsoft.VisualBasic.dll</reference>
    </references>
    <imports>
      <import>System</import>
      <import>System.Drawing</import>
      <import>System.Data</import>
      <import>System.IO</import>
      <import>System.Linq</import>
      <import>System.Text</import>
      <import>System.Collections.Generic</import>
      <import>Microsoft.VisualBasic.FileIO</import>
    </imports>
    <language>csharp</language>
    <globalcode><![CDATA[]]></globalcode>
    <code><![CDATA[public void LoopSubfolders(string path, string pattern, int numberOfDays, bool removeEmptyDirectories)
{
	foreach (string s in Directory.GetDirectories(path))
	{
		TraverseToEndOfPath(s, pattern, numberOfDays, removeEmptyDirectories);
	}
}

private void TraverseToEndOfPath(string path, string pattern, int numberOfDays, bool removeEmptyDirectories)
{
	if (Directory.GetDirectories(path).Length == 0)
	{
		DeleteFiles(path, pattern, numberOfDays, removeEmptyDirectories);
	}
	else
	{
		LoopSubfolders(path, pattern, numberOfDays, removeEmptyDirectories);
	}
}

public void DeleteFiles(string path, string pattern, int numberOfDays, bool removeEmptyDirectories)
{
	// get files based on pattern/filter and that have aged out
	List<string> patterns = pattern.Split(',').ToList();
	patterns.ForEach(
		p =>
		{
			Directory.EnumerateFiles(path, p).ToList().ForEach(
				f =>
				{
					FileInfo fi = new FileInfo(f);
					if (fi.LastWriteTime <= DateTime.Now.AddDays(-numberOfDays))
					{
						fi.Delete();
					}
				});
		});

	// delete directory if removeEmptyDirectories is true AND it's actually empty
	if (removeEmptyDirectories && Directory.GetFileSystemEntries(path).Length == 0)
		Directory.Delete(path);
}
]]></code>
  </stage>
  <stage stageid="d33b7926-05fb-4420-8231-032294e6e98d" name="Clean Up" type="SubSheetInfo">
    <subsheetid>332fe361-2dce-4907-8aea-27a336807b25</subsheetid>
    <narrative>
    </narrative>
    <displayx>-240</displayx>
    <displayy>-15</displayy>
    <displaywidth>210</displaywidth>
    <displayheight>90</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
  </stage>
  <stage stageid="2f61bc43-605d-4332-903d-7c237b093568" name="Start" type="Start">
    <subsheetid>332fe361-2dce-4907-8aea-27a336807b25</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-60</displayx>
    <displayy>-45</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <onsuccess>ecf1aa99-20a1-4e2d-9927-94f5777044c3</onsuccess>
  </stage>
  <stage stageid="ecf1aa99-20a1-4e2d-9927-94f5777044c3" name="End" type="End">
    <subsheetid>332fe361-2dce-4907-8aea-27a336807b25</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-60</displayx>
    <displayy>60</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
  </stage>
  <stage stageid="cd49a2e9-2b67-4165-a239-dc0aaddfe14f" name="Note1" type="Note">
    <subsheetid>332fe361-2dce-4907-8aea-27a336807b25</subsheetid>
    <narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative>
    <displayx>-240</displayx>
    <displayy>135</displayy>
    <displaywidth>210</displaywidth>
    <displayheight>180</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
  </stage>
  <stage stageid="8a8eb31e-077f-46a5-a0f4-0e504d174401" name="Note2" type="Note">
    <narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative>
    <displayx>-240</displayx>
    <displayy>120</displayy>
    <displaywidth>210</displaywidth>
    <displayheight>150</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
  </stage>
  <stage stageid="b529d184-6390-42c5-966b-6bc0cc7651e8" name="Parse Fixed Width File To Collection" type="SubSheetInfo">
    <subsheetid>48d3a4f8-7bfe-4634-b7c5-ab28c5860fbb</subsheetid>
    <narrative>This action takes in a collection of strings, each representing a fixed-width record/line from a flat file. It also takes in a collection of column definitions (including name, start position, and length). Each record is parsed by calling the "Parse Fixed Width Record" action and subsequently added to a collection of parsed data to be returned to the caller.</narrative>
    <displayx>-345</displayx>
    <displayy>-375</displayy>
    <displaywidth>210</displaywidth>
    <displayheight>90</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
  </stage>
  <stage stageid="9536b5ba-7b3e-4082-a7ff-426e017ff3a5" name="Start" type="Start">
    <subsheetid>48d3a4f8-7bfe-4634-b7c5-ab28c5860fbb</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-105</displayx>
    <displayy>-405</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="collection" name="ColumnDefinitions" narrative="Collection of column definitions; including column name, start position, and length" stage="ColumnDefinitions" />
      <input type="text" name="FilePath" narrative="Full path, including file name, of file to be parsed." stage="FilePath" />
    </inputs>
    <onsuccess>e384132d-7c74-48ee-b2a2-027cbe6aa350</onsuccess>
  </stage>
  <stage stageid="5dce49aa-ab48-4618-9e02-1d3a9c7120ee" name="End" type="End">
    <subsheetid>48d3a4f8-7bfe-4634-b7c5-ab28c5860fbb</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-105</displayx>
    <displayy>-255</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <outputs>
      <output type="collection" name="Data" narrative="Collection of records from the parsed text of the inbound fixed width collection" stage="Data" />
      <output type="flag" name="Success" narrative="Flag to indicate success/failure of the action" stage="Success" />
      <output type="text" name="Message" narrative="Output message for result of the action; primarily used for relaying exception message" stage="Message" />
    </outputs>
  </stage>
  <stage stageid="ec3ead03-b401-47bf-887b-54c437d6ce99" name="Data" type="Collection">
    <subsheetid>48d3a4f8-7bfe-4634-b7c5-ab28c5860fbb</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-345</displayx>
    <displayy>-180</displayy>
    <displaywidth>150</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="484efa86-191c-42c2-8064-0367439ded18" name="ColumnDefinitions" type="Collection">
    <subsheetid>48d3a4f8-7bfe-4634-b7c5-ab28c5860fbb</subsheetid>
    <narrative>
    </narrative>
    <displayx>-345</displayx>
    <displayy>-285</displayy>
    <displaywidth>150</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
    <collectioninfo>
      <field name="Name" type="text" description="Column name" />
      <field name="StartPosition" type="number" description="Starting position of the column" />
      <field name="Length" type="number" description="Length of the column" />
    </collectioninfo>
  </stage>
  <stage stageid="f291b290-36fd-45a7-9e7f-f5ae56a589a2" name="Success" type="Data">
    <subsheetid>48d3a4f8-7bfe-4634-b7c5-ab28c5860fbb</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-345</displayx>
    <displayy>-150</displayy>
    <displaywidth>150</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="1ab72d58-b3ec-42b4-bb49-bca0d7229ad1" name="Message" type="Data">
    <subsheetid>48d3a4f8-7bfe-4634-b7c5-ab28c5860fbb</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-345</displayx>
    <displayy>-120</displayy>
    <displaywidth>150</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="1ba7e3e9-bd21-4e92-8cac-fd93d3aaa593" name="Input Data Items" type="Block">
    <subsheetid>48d3a4f8-7bfe-4634-b7c5-ab28c5860fbb</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-450</displayx>
    <displayy>-315</displayy>
    <displaywidth>210</displaywidth>
    <displayheight>90</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="FFCC00" />
  </stage>
  <stage stageid="db75cfa4-4be5-4da2-b513-259fa3efdb67" name="Output Data Items" type="Block">
    <subsheetid>48d3a4f8-7bfe-4634-b7c5-ab28c5860fbb</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-450</displayx>
    <displayy>-210</displayy>
    <displaywidth>210</displaywidth>
    <displayheight>120</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="800000" />
  </stage>
  <stage stageid="15e24bc9-9970-4018-9c1a-8cefdabdfbcd" name="Delete Files" type="SubSheetInfo">
    <subsheetid>bdfff7c5-0f75-410d-bc08-773a9a069e42</subsheetid>
    <narrative>This action takes in a single folder path, a file extension pattern, and a number of days. It uses that data to delete all files that meet the file extension pattern and are older than the number of days. And then traverses all nested sub folders recursively to delete files in the same manner.</narrative>
    <displayx>-345</displayx>
    <displayy>-90</displayy>
    <displaywidth>210</displaywidth>
    <displayheight>90</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
  </stage>
  <stage stageid="d4e6ba50-b525-4cba-8185-806249e36ba7" name="End" type="End">
    <subsheetid>bdfff7c5-0f75-410d-bc08-773a9a069e42</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-150</displayx>
    <displayy>30</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <outputs>
      <output type="flag" name="Success" narrative="Flag to indicate success/failure of the action" stage="Success" />
      <output type="text" name="Message" narrative="Output message for result of the action; primarily used for relaying exception message" stage="Message" />
    </outputs>
  </stage>
  <stage stageid="68ad89d7-8cb9-4237-800e-0ef452413c0c" name="Delete Files" type="Code">
    <subsheetid>bdfff7c5-0f75-410d-bc08-773a9a069e42</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-150</displayx>
    <displayy>-45</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>60</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="startPath" expr="[File Path]" />
      <input type="text" name="pattern" expr="[File Extension Pattern]" />
      <input type="number" name="numberOfDays" expr="[Number of Days]" />
      <input type="flag" name="removeEmptyDirectories" expr="[Remove Empty Directories]" />
      <input type="flag" name="recursive" expr="[Recursively Delete In Subfolders]" />
    </inputs>
    <outputs>
      <output type="flag" name="success" stage="Success" />
      <output type="text" name="message" stage="Message" />
    </outputs>
    <onsuccess>d4e6ba50-b525-4cba-8185-806249e36ba7</onsuccess>
    <code><![CDATA[success = true;
message = string.Empty;

try
{
	if (recursive)
		LoopSubfolders(startPath, pattern, Convert.ToInt32(numberOfDays), removeEmptyDirectories);
	else
		DeleteFiles(startPath, pattern, Convert.ToInt32(numberOfDays), removeEmptyDirectories);
}
catch (Exception ex)
{
	success = false;
	message = ex.Message;
	}
]]></code>
  </stage>
  <stage stageid="788a9601-6b8e-4453-90d8-d8238d9e88f3" name="Success" type="Data">
    <subsheetid>bdfff7c5-0f75-410d-bc08-773a9a069e42</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-345</displayx>
    <displayy>195</displayy>
    <displaywidth>150</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>flag</datatype>
    <initialvalue>False</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="8a2be339-bc5d-4f2e-a0a5-0594437e578f" name="Message" type="Data">
    <subsheetid>bdfff7c5-0f75-410d-bc08-773a9a069e42</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-345</displayx>
    <displayy>225</displayy>
    <displaywidth>150</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="ba11d951-85f3-4ad4-a60f-988de466a7f7" name="Input Data Items" type="Block">
    <subsheetid>bdfff7c5-0f75-410d-bc08-773a9a069e42</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-450</displayx>
    <displayy>-30</displayy>
    <displaywidth>210</displaywidth>
    <displayheight>180</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="FFCC00" />
  </stage>
  <stage stageid="9dc30f7f-dcda-46a1-bd9c-078e6f31317f" name="Output Data Items" type="Block">
    <subsheetid>bdfff7c5-0f75-410d-bc08-773a9a069e42</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-450</displayx>
    <displayy>165</displayy>
    <displaywidth>210</displaywidth>
    <displayheight>90</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="800000" />
  </stage>
  <stage stageid="b3fbf6ae-846a-4253-88b2-b8222e097f60" name="Start" type="Start">
    <subsheetid>bdfff7c5-0f75-410d-bc08-773a9a069e42</subsheetid>
    <preconditions>
      <condition narrative="The folder path provided must be a valid path." />
      <condition narrative="The file extension pattern must be a valid string pattern (For example: *.*  or  *.csv; etc.). Multiple patterns may be used but must be comma delimited (For example: *.csv,*.txt)." />
      <condition narrative="The number of days must a valid number." />
    </preconditions>
    <narrative>
    </narrative>
    <displayx>-150</displayx>
    <displayy>-120</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="File Path" stage="File Path" />
      <input type="number" name="Number of Days" stage="Number of Days" />
      <input type="text" name="File Extension Pattern" stage="File Extension Pattern" />
      <input type="flag" name="Remove Empty Directories" stage="Remove Empty Directories" />
      <input type="flag" name="Recursively Delete In Subfolders" stage="Recursively Delete In Subfolders" />
    </inputs>
    <onsuccess>68ad89d7-8cb9-4237-800e-0ef452413c0c</onsuccess>
  </stage>
  <stage stageid="6dc825ab-9c3a-4f32-88bd-6ec986491e66" name="File Path" type="Data">
    <subsheetid>bdfff7c5-0f75-410d-bc08-773a9a069e42</subsheetid>
    <narrative>
    </narrative>
    <displayx>-345</displayx>
    <displayy>0</displayy>
    <displaywidth>150</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="8c678857-124d-489f-a2ca-2917a7517452" name="Number of Days" type="Data">
    <subsheetid>bdfff7c5-0f75-410d-bc08-773a9a069e42</subsheetid>
    <narrative>
    </narrative>
    <displayx>-345</displayx>
    <displayy>30</displayy>
    <displaywidth>150</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <datatype>number</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="541f447f-918b-447b-b06c-694c41b292e3" name="File Extension Pattern" type="Data">
    <subsheetid>bdfff7c5-0f75-410d-bc08-773a9a069e42</subsheetid>
    <narrative>
    </narrative>
    <displayx>-345</displayx>
    <displayy>60</displayy>
    <displaywidth>150</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="fda69089-bcc5-4e6d-ad8b-d6afa3618804" name="Remove Empty Directories" type="Data">
    <subsheetid>bdfff7c5-0f75-410d-bc08-773a9a069e42</subsheetid>
    <narrative>
    </narrative>
    <displayx>-345</displayx>
    <displayy>90</displayy>
    <displaywidth>150</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="35c85f44-d2d7-4304-b82f-9412d2700c91" name="Recursively Delete In Subfolders" type="Data">
    <subsheetid>bdfff7c5-0f75-410d-bc08-773a9a069e42</subsheetid>
    <narrative>
    </narrative>
    <displayx>-345</displayx>
    <displayy>120</displayy>
    <displaywidth>150</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="d6aba62c-491f-4a01-bc3e-ccd0afa719ce" name="FilePath" type="Data">
    <subsheetid>48d3a4f8-7bfe-4634-b7c5-ab28c5860fbb</subsheetid>
    <narrative>
    </narrative>
    <displayx>-345</displayx>
    <displayy>-255</displayy>
    <displaywidth>150</displaywidth>
    <displayheight>30</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="e384132d-7c74-48ee-b2a2-027cbe6aa350" name="Parse Fixed Width File" type="Code">
    <subsheetid>48d3a4f8-7bfe-4634-b7c5-ab28c5860fbb</subsheetid>
    <loginhibit />
    <narrative>
    </narrative>
    <displayx>-105</displayx>
    <displayy>-330</displayy>
    <displaywidth>120</displaywidth>
    <displayheight>60</displayheight>
    <font family="Segoe UI" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="filePath" expr="[FilePath]" />
      <input type="collection" name="columnDefinitions" expr="[ColumnDefinitions]" />
    </inputs>
    <outputs>
      <output type="collection" name="fileData" stage="Data" />
      <output type="flag" name="success" stage="Success" />
      <output type="text" name="message" stage="Message" />
    </outputs>
    <onsuccess>5dce49aa-ab48-4618-9e02-1d3a9c7120ee</onsuccess>
    <code><![CDATA[success = true;
message = "";
fileData = new DataTable();

try
{
	using (TextFieldParser parser = new TextFieldParser(filePath))
	{
		// set up return datatable based on columnDefinitions
		DataTable dt = new DataTable();
		columnDefinitions.AsEnumerable().ToList().ForEach(
			r =>
			{
				dt.Columns.Add(r.Field<string>("Name"), typeof(string));
			});

		// set field widths
		parser.TextFieldType = FieldType.FixedWidth;
		parser.FieldWidths = columnDefinitions.AsEnumerable().Select(f => Convert.ToInt32(f.Field<decimal>("Length"))).ToArray();

		// process the file
		DataRow dr;
		while (!parser.EndOfData)
		{
			try
			{
				// set up new row in return datatable and assign column values based on parsed fields
				dr = dt.NewRow();
				string[] fields = parser.ReadFields();
				for (int i = 0; i <= fields.Length - 1; i++)
				{
					dr[i] = fields[i];
				}
				dt.Rows.Add(dr);
			}
			catch
			{
				// do nothing...exception here just means the parser hit a line
				// that doesn't match the columnDefinitions; some page headers/footers
				// in flat files have different line lengths, etc.
			}
		}
		
		fileData = dt.Copy();
	}
}
catch (Exception ex)
{
	success = false;
	message = ex.Message;
}
]]></code>
  </stage>
</process>